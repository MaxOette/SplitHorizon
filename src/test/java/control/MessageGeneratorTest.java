package control;

import model.Contact;
import model.Gender;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * Class for testing functionality of MessageGenerator.
 */
public class MessageGeneratorTest {

    private static Stream<Arguments> provideMessageTestCases() {
        return Stream.of(
                Arguments.of(new Contact("Herr", Gender.M,"Prof.", "Dr. rer. nat.", "Max", "Erika", "Freiherr von", "Mustermann-Musterfrau"), "Sehr geehrter Herr Prof. Dr. rer. nat. Max Erika Freiherr von Mustermann-Musterfrau"),
                Arguments.of(new Contact("Frau",Gender.F, "", "", "Erika", "", "", "Musterfrau"),"Sehr geehrte Frau Erika Musterfrau"),
                Arguments.of(new Contact("", Gender.X, "", "", "Max", "", "", "Mustermann"), "Hallo Max Mustermann"),
                Arguments.of(new Contact("Hr.", Gender.M,"Dr.", "", "Max", "Erika", "von", "Mustermann"), "Sehr geehrter Herr Dr. Max Erika von Mustermann"),
                Arguments.of(new Contact("Fr.", Gender.F,"", "", "Erika", "", "", "Musterfrau"), "Sehr geehrte Frau Erika Musterfrau")
        );
    }

    /**
     * Tests the generation of letter salutations by the MessageGeneratorImpl class.
     *
     * @param contact The Contact object set up with specific titles, names, and gender for the test.
     * @param expectedMessage The expected result string that should be generated by the MessageGeneratorImpl.
     */
    @ParameterizedTest
    @MethodSource("provideMessageTestCases")
    void testGenerateMessage(Contact contact, String expectedMessage) {
        MessageGeneratorImpl generator = new MessageGeneratorImpl();
        String message = generator.generateMessage(contact);

        assertEquals(expectedMessage, message);
    }

}
